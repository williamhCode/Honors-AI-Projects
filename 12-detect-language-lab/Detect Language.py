#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'test1.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(70, 40, 121, 21))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.label.setFont(font)
        self.label.setObjectName("label")
        
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(70, 480, 151, 21))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        
        self.plainTextEdit = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.plainTextEdit.setGeometry(QtCore.QRect(70, 80, 651, 391))
        self.plainTextEdit.setPlainText("")
        self.plainTextEdit.setObjectName("plainTextEdit")
        
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 24))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        
        MainWindow.setStatusBar(self.statusbar)
        self.actionOpen_File = QtWidgets.QAction(MainWindow)
        self.actionOpen_File.setObjectName("actionOpen_File")
        self.menuFile.addAction(self.actionOpen_File)
        self.menubar.addAction(self.menuFile.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        
        self.plainTextEdit.textChanged.connect(self.detectLanguage)
        self.actionOpen_File.triggered.connect(self.importFile)
        self.label_2.adjustSize()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Detect Language"))
        self.label.setText(_translate("MainWindow", "Enter Text:"))
        self.label_2.setText(_translate("MainWindow", "The Language is"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.actionOpen_File.setText(_translate("MainWindow", "Open File"))
        
    def importFile(self):
        filter = "txt(*.txt)"
        filename = QFileDialog.getOpenFileName(None, '', '', filter)
        path = filename[0]
        print(path)
        with open(path, 'r') as file:
            sample = file.read().replace('\n', '')
        self.plainTextEdit.setPlainText(sample)
    
    def detectLanguage(self):
        #store the letter frequency data
        lfData = []
    
        file = "files/Book1.csv"
        for line in open (file, encoding = "utf-8-sig"):    
            line = line.split(',')
            i = 0
            while(i < len(line)):
                line[i] = line[i].replace('%', '')
                line[i] = line[i].replace('*', '')
                line[i] = line[i].replace('\n', '')
                i += 1
            lfData.append(line)
        
        sample = self.plainTextEdit.toPlainText()
        sample = sample.lower()
        
        #read the letters and compute the percentage frequency of each letter
        convert = 'abcdefghijklmnopqrstuvwxyz'
        s1Data = [0] * 26
        for c in sample:
            if c in convert:
                s1Data[convert.index(c)] += 1
        
        s1Sum = sum(s1Data)
        if(s1Sum == 0):
            self.label_2.setText('The Language is ')
            return
            
        i = 0
        while(i < 26):
            s1Data[i] = (s1Data[i] / s1Sum * 100)
            i += 1
        
        #store the sum of square difference for each language's letter frequency
        squareDifference = [0]*15
        j = 0
        sums = 0
        while(j < 15):
            i = 0
            sums = 0
            while(i < 26):
                sums = sums + (float(lfData[i][j+1]) - s1Data[i])**2
                i += 1
            squareDifference[j] = sums
            j += 1
        
        #find the language with the least sum of square difference
        smallestIndex = 0
        smallestValue = squareDifference[0]
        i = 1
        while(i < 15):
            temp = squareDifference[i]
            if (temp < smallestValue):
                smallestIndex = i
                smallestValue = temp
            i += 1
        i -= 1
        
        language = ['English',
                    'French',
                    'German',
                    'Spanish',
                    'Portuguese',
                    'Esperanto',
                    'Italian',
                    'Turkish',
                    'Swedish',
                    'Polish',
                    'Dutch',
                    'Danish',
                    'Icelandic',
                    'Finnish',
                    'Czech']
        
        self.label_2.setText('The Language is ' + language[smallestIndex] + '.')
        self.label_2.adjustSize()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())